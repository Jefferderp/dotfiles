### Prefix keybinds
# 'C' is Ctrl
# Bind prefix to 'C-a' while leaving default (C-b) bound as well
set prefix2 C-a

# Make it possible to input the prefix recursively (in case we're working with nested tmux sessions)
bind-key a send-prefix
bind-key b send-prefix

# Bind config reload to 'r' 
bind r source-file ~/.tmux.conf

### Prefix keybinds (active once prefix key pressed)
# Bind the splitting of panes to '|' and '-' in addition to defaults (including variants when Shift is held)
#bind-key -T prefix | split-window -h
#bind-key -T prefix \ split-window -h
#bind-key -T prefix - split-window -v
#bind-key -T prefix _ split-window -v
# Hold Ctrl while splitting to create a pane that consumes 100% of the vertical/horizontal dimension
#bind-key -T prefix C-\ split-window -h -f
#bind-key -T prefix C-- split-window -v -f

### Root keybinds (active always)
# Bind switch panes to 'Alt-arrows' ('M' is meta key, typically Alt)
bind-key -T root M-Left select-pane -L
bind-key -T root M-Right select-pane -R
bind-key -T root M-Up select-pane -U
bind-key -T root M-Down select-pane -D

# Bind the directional swapping of panes to 'Ctrl-Alt-arrows'
bind-key -T root C-M-Left  select-pane -L \; select-pane -m \; select-pane -R \; swap-pane \; select-pane -M
bind-key -T root C-M-Right select-pane -R \; select-pane -m \; select-pane -L \; swap-pane \; select-pane -M
bind-key -T root C-M-Up    select-pane -U \; select-pane -m \; select-pane -D \; swap-pane \; select-pane -M
bind-key -T root C-M-Down  select-pane -D \; select-pane -m \; select-pane -U \; swap-pane \; select-pane -M

# Bind the directional resizing of panes to 'Shift-Alt-arrows'
bind-key -T root S-M-Left  resize-pane -L 2
bind-key -T root S-M-Right resize-pane -R 2
bind-key -T root S-M-Up    resize-pane -U 2
bind-key -T root S-M-Down  resize-pane -D 2

### Behavior
# Enable status line and update every 5 seconds
set status on
set status-interval 5
set automatic-rename-format "#(ps -f --no-headers --ppid $(tmux display-message -p #{pane_pid}) | awk '{ print substr($0, index($0,$8)) }') "

# Don't wait for further keys after 'Esc'
set -s escape-time 0

# Automatic window naming
set-window-option -g automatic-rename on
set-option -g set-titles on

# Highlight window ringing the bell
set-window-option monitor-bell on

### Mouse control
# Turn mouse control on
# May conflict with mouse bindings from your terminal emulator. For example, GNU KiTTY has a workaround - hold Shift to override any hijacking of the mouse by the terminal.
set mouse on

# Modified mouse keybinds
unbind-key -T root MouseDown1Pane

# Default mouse keybinds
#bind-key    -T root         MouseDown1Pane    select-pane -t = ; send-keys -M
#bind-key    -T root         MouseDown1Status  select-window -t =
#bind-key    -T root         MouseDown3Pane    if-shell -F -t = "#{mouse_any_flag}" "select-pane -t=; send-keys -M" "select-pane -mt="
#bind-key    -T root         MouseDrag1Pane    if-shell -F -t = "#{mouse_any_flag}" "if -Ft= \"#{pane_in_mode}\" \"copy-mode -M\" \"send-keys -M\"" "copy-mode -M"
#bind-key    -T root         MouseDrag1Border  resize-pane -M
#bind-key    -T root         WheelUpPane       if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= \"#{pane_in_mode}\" \"send-keys -M\" \"copy-mode -et=\""
#bind-key    -T root         WheelUpStatus     previous-window
#bind-key    -T root         WheelDownStatus   next-window

# Grace period after sending prefix for sending multiple keybinds
set repeat-time 700

# Don't destroy session when empty or unattached
set exit-unattached off
set destroy-unattached off

# Specify tmux commands history file
set history-file ~/.tmux_history

# Index window numbers from 1 (0 is hard to reach!)
# Also re-number existing windows when one is closed
set base-index 1
set pane-base-index 1
set renumber-windows on

# Increase linger duration of `display-panes` (pressing q)
set display-panes-time 2000

# Set pane long scrollback/history (may increase RAM usage)
set-option -g history-limit 10000

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

### Theming
# Enable 256 colors
set -g default-terminal "tmux-256color"
set-option -g default-command bash

# 'Highlight' the current pane by modifying the text and background color on switch
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'

# Status bar: white backdrop, black text, no left-hand status.
set status-bg colour7
set status-fg black
set status-left ""

# Status bar: highlight current window
#set-window-option -g window-status-current-bg white

# Status bar: set a reasonable status length
set status-left-length 40
set status-right-length 40

### Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
#run '~/.tmux/plugins/tpm/tpm'
